name: Merge Main into Feature Branches

on:
  push:
    branches:
      - main  # Trigger when changes are pushed to main

jobs:
  merge-main:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all branches

      # Step 2: Set up Git user info
      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      # Step 3: Fetch all branches
      - name: Fetch all branches
        run: git fetch --all

      # Step 4: Iterate through all branches and merge main into each
      # - name: Merge main into all feature branches
      #   run: |
      #     # Get a list of all branches (excluding main)
      #     for branch in $(git for-each-ref --format='%(refname:short)' refs/heads/ | grep -v '^main$'); do
      #       echo "Merging main into $branch"
      #       git checkout $branch
      #       git merge origin/main --no-ff --no-edit || echo "Conflict in $branch, manual resolution needed"
      #       git push origin $branch || echo "Failed to push $branch"
      #     done

        
      # Step 4: Show all branches
      - name: Show all branches
        run: |
          echo "All branches:"
          git branch -a  # List all local and remote branches

      # Step 5: List and show feature branches
      - name: Show feature branches
        run: |
          echo "Feature branches:"
          branches=$(git branch -r | grep -v 'origin/main' || true)
          if [ -z "$branches" ]; then
            echo "No feature branches found."
          else
            echo "$branches"
          fi

      # Step 6: Iterate through all feature branches and merge main into each
      - name: Merge main into all feature branches
        run: |
          # Iterate through remote feature branches
          for branch in $(git branch -r | grep -v 'origin/main'); do
            branch_name=$(echo $branch | sed 's|origin/||')  # Remove 'origin/' prefix
            echo "Merging main into $branch_name"
            
            # Check out the remote branch
            git checkout -b $branch_name origin/$branch_name
            
            # Pull the latest changes for the branch to ensure it's up to date
            git pull origin $branch_name
            
            # Merge the changes from main
            git merge origin/main --no-ff --no-edit
            
            # Check if the merge was successful before pushing
            if [ $? -eq 0 ]; then
              git push origin $branch_name || echo "Failed to push $branch_name"
            else
              echo "Conflict in $branch_name, manual resolution needed"
            fi
          done